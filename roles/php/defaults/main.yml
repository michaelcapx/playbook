---
# defaults file for php

# The PHP version to be installed.
php_version: '7.1'

# Build dependencies for packages (will be installed with apt).
php_dependencies:
  - apt-transport-https
  - ca-certificates

# PHP package state; use 'installed' to make sure it's installed, or 'latest' if
# you want to upgrade or switch versions using a new repo.
php_packages_state: installed

# Whether to install recommended packages. Used only for Debian/Ubuntu.
php_install_recommends: yes

# Define the php packages to install.
php_packages:
  - "php{{ php_version }}"
  # - "php{{ php_version }}-apcu"
  - "php{{ php_version }}-bcmath"
  - "php{{ php_version }}-bz2"
  - "php{{ php_version }}-cgi"
  - "php{{ php_version }}-cli"
  - "php{{ php_version }}-common"
  - "php{{ php_version }}-curl"
  - "php{{ php_version }}-dev"
  # - "php{{ php_version }}-fpm"
  - "php{{ php_version }}-gd"
  - "php{{ php_version }}-intl"
  - "php{{ php_version }}-imagick"
  - "php{{ php_version }}-imap"
  - "php{{ php_version }}-json"
  - "php{{ php_version }}-ldap"
  - "php{{ php_version }}-mbstring"
  - "php{{ php_version }}-mcrypt"
  - "php{{ php_version }}-memcached"
  - "php{{ php_version }}-mongodb"
  - "php{{ php_version }}-mysql"
  - "php{{ php_version }}-opcache"
  - "php{{ php_version }}-pgsql"
  - "php{{ php_version }}-readline"
  - "php{{ php_version }}-redis"
  - "php{{ php_version }}-soap"
  - "php{{ php_version }}-sqlite3"
  - "php{{ php_version }}-xdebug"
  - "php{{ php_version }}-xml"
  - "php{{ php_version }}-xmlrpc"
  - "php{{ php_version }}-yaml"
  - "php{{ php_version }}-zip"

# Set this to false if you're not using PHP with Apache/Nginx/etc.
php_enable_webserver: true

# Set the webserver daemon (either `apache2` or `nginx`).
php_webserver_daemon: "apache2"

# OpCache settings.
php_opcache_enable: true

# Whether to install `php-pear`.
php_pecl_install_pecl: false
php_pecl_package: php-pear

# The command that will be run to install extensions. The default is generally correct, but if you're running Ubuntu 14.04 LTS and run into [this issue](https://github.com/geerlingguy/ansible-role-php-pecl/pull/7), you should override this default with `"pecl install -Z"`
php_pecl_install_command: "pecl install"

# Add extensions to this list to have them installed with this role.
php_pecl_extensions: []
  # - xdebug

# Path to install PHP phar tools.
php_phar_path: /usr/local/bin

# Array of PHP phar tools to install.
php_phar_tools:
  - { dest: "php-cs-fixer", url: "http://get.sensiolabs.org/php-cs-fixer.phar" }
  - { dest: "phpcpd", url: "https://phar.phpunit.de/phpcpd.phar" }
  - { dest: "sami", url: "http://get.sensiolabs.org/sami.phar" }
  - { dest: "robo", url: "http://robo.li/robo.phar" }
  - { dest: "phpmd", url: "http://static.phpmd.org/php/latest/phpmd.phar" }
  - { dest: "phpunit", url: "https://phar.phpunit.de/phpunit.phar" }
  - { dest: "codecept", url: "http://codeception.com/codecept.phar" }
  - { dest: "wp", url: "https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar" }
  - { dest: "drupal", url: "https://drupalconsole.com/installer" }
  - { dest: "drush", url: "https://github.com/drush-ops/drush/releases/download/8.1.10/drush.phar" }
