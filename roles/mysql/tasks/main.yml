---
# tasks file for mysql

# MySQL Prerequisites
- name: Check if MySQL is already installed
  stat:
    path: /etc/init.d/mysql
  register: mysql_installed

- name: Update apt cache if MySQL is not yet installed
  apt:
    update_cache: yes
  when: mysql_installed.stat.exists == false

- name: Ensure MySQL Python libraries are installed
  apt:
    name: python-mysqldb
    state: installed

- name: Set MySQL debconf password
  debconf:
    name: mysql-server
    question: mysql-server/root_password
    value: "{{ mysql_root_password }}"
    vtype: password

- name: Set MySQL debconf password again
  debconf:
    name: mysql-server
    question: mysql-server/root_password_again
    value: "{{ mysql_root_password }}"
    vtype: password

# MySQL Installation
- name: Ensure MySQL packages are installed
  apt:
    name: "{{ item }}"
    state: latest
  with_items: "{{ mysql_packages }}"
  register: deb_mysql_install_packages

# MySQL Configuration
- name: Configure MySQL Password Lifetime
  lineinfile:
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: "default_password_lifetime =.*"
    line: "default_password_lifetime = 0"
    state: present
    backrefs: yes

- name: Configure MySQL listen IP address
  lineinfile:
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: "bind-address =.*"
    line: "bind-address = {{ mysql_bind_address }}"
    state: present
    backrefs: yes

- name: Ensure MySQL is started to change root password
  service:
    name: "{{ mysql_daemon }}"
    state: started

# - name: Set MySQL root user password
#   mysql_user:
#     name: root
#     password: "{{ mysql_root_password }}"
#     host: "{{ item }}"
#     priv: "*.*:ALL,GRANT"
#     state: present
#   with_items:
#     - 127.0.0.1
#     - ::1
#     - localhost

- name: Configure MySQL for easy access as root user
  template:
    src: root.my.cnf.j2
    dest: /root/.my.cnf
    mode: 0600

# MySQL Security
- name: Remove the MySQL test database
  mysql_db:
    name: test
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"

# Timezone Support
- name: Check MySQL timezone support
  command: mysql -NBe "SELECT COUNT(*) FROM mysql.time_zone"
  register: mysql_timezones_count
  changed_when: false
  check_mode: no

- name: Add timezone support to MySQL
  shell: "mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --user={{ mysql_root_username }} --password={{ mysql_root_password }} mysql"
  when: mysql_timezones_count.stdout|int < 1
  notify: restart mysql

# MySQL Databases

- name: Ensure MySQL databases are present
  mysql_db:
    name: "{{ item.name }}"
    collation: "{{ item.collation | default('utf8_general_ci') }}"
    encoding: "{{ item.encoding | default('utf8') }}"
    state: present
  with_items: "{{ mysql_databases }}"

# MySQL Users

- name: Ensure MySQL users are present
  mysql_user:
    name: "{{ item.name }}"
    host: "{{ item.host | default('localhost') }}"
    password: "{{ item.password }}"
    priv: "{{ item.priv | default('*.*:USAGE') }}"
    state: "{{ item.state | default('present') }}"
    append_privs: "{{ item.append_privs | default('no') }}"
  with_items: "{{ mysql_users }}"
  no_log: true

# MySQL Restart
- name: Ensure MySQL is started
  service:
    name: "{{ mysql_daemon }}"
    state: restarted
    enabled: yes
