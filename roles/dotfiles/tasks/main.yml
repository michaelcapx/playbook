---
# tasks file for dotfiles

- name: Create public dotfiles directory
  file:
    path: "{{ dotfiles_home }}/{{ dotfiles_path }}"
    state: directory
  register: dotfiles_create

- name: Clone public dotfiles repository
  become: true
  become_user: "{{ dotfiles_user }}"
  git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ dotfiles_home }}/{{ dotfiles_path }}"
    update: yes
    bare: yes
    accept_hostkey: yes
  failed_when: false
  notify: checkout dotfiles

# Make sure the handler runs now and not at the end of the playbook
- meta: flush_handlers

- name: Configure repository
  command: "git config --local user.email {{ dotfiles_git_email }}"
  args:
    chdir: "{{ dotfiles_home }}/{{ dotfiles_path }}"
    warn: false
  when:
    - dotfiles_create.changed
    - dotfiles_git_email is defined and dotfiles_git_email != ''

- name: Configure repository
  command: "git config --local user.name {{ dotfiles_git_name }}"
  args:
    chdir: "{{ dotfiles_home }}/{{ dotfiles_path }}"
    warn: false
  when:
    - dotfiles_create.changed
    - dotfiles_git_name is defined and dotfiles_git_name != ''

- name: Fix dotfiles directory owner
  file:
    path: "{{ dotfiles_home }}/{{ dotfiles_path }}"
    owner: "{{ dotfiles_user }}"
    group: "{{ dotfiles_user }}"
    recurse: yes
