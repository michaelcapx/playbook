---
# tasks file for desktop

# Install Dependencies
- name: Install desktop dependencies
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ desktop_apt_dependencies | list }}"
  when: desktop_apt_dependencies | length

# Install PPA Packages
- name: Add desktop PPA repositories
  apt_repository:
    repo: "{{ item.ppa }}"
    state: present
  with_items: "{{ desktop_apt_ppa }}"
  when: desktop_apt_ppa | length

- name: Install desktop PPA packages
  apt:
    name: "{{ item.pkg }}"
    state: present
  with_items: "{{ desktop_apt_ppa }}"
  when: desktop_apt_ppa | length

# Install Desktop Packages
- name: Install desktop software packages
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ desktop_apt_packages | list }}"
  when: desktop_apt_packages | length

# Create Directories
- name: Make sure /usr/local/share/applications exists
  file:
    path: /usr/local/share/applications
    state: directory
    owner: "{{ desktop_user }}"
    group: "{{ desktop_user }}"

- name: Make sure startup application directory exists
  file:
    path: "{{ desktop_home }}/.config/autostart"
    state: directory
    owner: "{{ desktop_user }}"
    group: "{{ desktop_user }}"

# Set Permissions
- name: Set jack.sh with proper permissions
  file:
    dest: /etc/acpi/jack.sh
    owner: root
    group: root
    mode: 0755

# Install Gimp
- name: Add Gimp repository
  apt_repository:
    repo: ppa:otto-kesselgulasch/gimp
    state: present
  register: gimp_add_apt_repo

- name: Install Gimp
  apt:
    name: "{{ item }}"
    state: latest
  with_items:
    - gimp
    - gimp-plugin-registry
    - gimp-data-extras
  when: gimp_add_apt_repo | succeeded

- name: Ensure Gimp directory exists
  file:
    state: directory
    path: "{{ desktop_home }}/.gimp-2.8"
    mode: 0755
    owner: "{{ desktop_user }}"
    group: "{{ desktop_user }}"

- name: Add Gimp configuration
  lineinfile:
    dest: "{{ desktop_home }}/.gimp-2.8/sessionrc"
    regexp: "{{ item.param }}"
    line: "{{ item.value }}"
    create: true
  with_items :
    - { param: "single-window-mode", value: "(single-window-mode yes)" }
    - { param: "default-snap-to-canvas", value: "(default-snap-to-canvas yes)" }
    - { param: "default-snap-to-grid", value: "(default-snap-to-grid yes)" }
    - { param: "hide-docks", value: "(hide-docks no)" }
    - { param: "last-tip-shown", value: "(last-tip-shown 0)" }
  become: true
  become_user: "{{ desktop_user }}"

# Install Inkscape
- name: Configure the Inkscape PPA
  apt_repository:
    repo: ppa:inkscape.dev/stable
    state: present
  register: inkscape_add_apt_repo

- name: Ensure Inkscape is installed
  apt:
    name: inkscape
    state: latest
  when: inkscape_add_apt_repo | succeeded

# Install LibreOffice
- name: Configure the LibreOffice PPA
  apt_repository:
    repo: ppa:libreoffice/libreoffice-5-4
    state: present
  register: libreoffice_add_apt_repo

- name: Ensure LibreOffice is installed
  apt:
    name: libreoffice
    state: latest
  when: libreoffice_add_apt_repo | succeeded

# Install MySQL WorkBench
- name: Check if MySQL WorkBench is installed
  command: dpkg-query -W mysql-workbench
  register: mysql_workbench_check_deb
  failed_when: mysql_workbench_check_deb.rc > 1
  changed_when: mysql_workbench_check_deb.rc == 1

- name: Download MySQL WorkBench
  get_url:
    url: "https://dev.mysql.com/get/Downloads/MySQLGUITools/mysql-workbench-community-6.3.10-1ubuntu16.04-amd64.deb"
    dest: "/tmp/download-mysql-workbench-latest.deb"
  when: mysql_workbench_check_deb.rc == 1

- name: Install MySQL WorkBench
  apt:
    deb: "/tmp/download-mysql-workbench-latest.deb"
  when: mysql_workbench_check_deb.rc == 1

- name: Clean MySQL WorkBench deb file
  file:
    path: /tmp/download-mysql-workbench-latest.deb
    state: absent

# Install Remmina
- name: Configure the Remmina PPA
  apt_repository:
    repo: ppa:remmina-ppa-team/remmina-next
    state: present
  register: remmina_add_apt_repo

- name: Ensure Remmina is installed
  apt:
    name: "{{ item }}"
    state: latest
  with_items:
    - remmina
    - remmina-plugin-rdp
  when: remmina_add_apt_repo | succeeded
