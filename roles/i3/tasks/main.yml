---
# tasks file for i3

# Install i3
- name: Install i3 dependency PPAs
  apt_repository:
    repo: ppa:aguignard/ppa
    state: present
    update_cache: yes

- name: Install i3 dependencies
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ i3_dependencies | list }}"
  when: i3_dependencies | length

- name: Ensure git parent path exists
  file:
    path: "{{ i3_gaps_git_path | dirname }}"
    state: directory
    mode: 0755

- name: Fetch i3-gaps latest version
  shell: |
    curl https://github.com/Airblader/i3/releases 2>/dev/null \
    | grep -E '/Airblader/i3/releases/tag/[.0-9]+' \
    | grep -Eo '[.0-9]+' \
    | sort -V \
    | tail -1
  register: i3_gaps_release_tag
  check_mode: no
  changed_when: False

- name: Ensure i3-gaps is cloned
  git:
    repo: "{{ i3_gaps_git_url }}"
    dest: "{{ i3_gaps_git_path }}"
    version: "{{ i3_gaps_release_tag.stdout }}"
    clone: yes
    force: yes
    recursive: yes
    update: yes
    depth: 1
  notify:
    - autoreconf i3-gaps
    - configure i3-gaps
    - compile i3-gaps
    - install i3-gaps

# Make sure the handler runs now and not at the end of the playbook
- meta: flush_handlers

# i3 Bin Utilities
- name: Install i3 bin packages
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ i3_bin_shared | list }}"
  when: i3_bin_shared | length

- name: Ensure i3-utils-bin tools are downloaded
  get_url:
    url: "https://raw.githubusercontent.com/cytopia/i3-utils-bin/master/bin/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
    force: yes
    timeout: 30
  register: task_result
  until: task_result | succeeded
  retries: 10
  delay: 5
  become: yes
  with_items:
    - "{{ i3_utils_bin_tools }}"

- name: Ensure applications folder exist
  file:
    state: directory
    path: /usr/share/applications
    mode: 0755

- name: Ensure ximage desktop file is present
  get_url:
    url: https://raw.githubusercontent.com/cytopia/i3-utils-bin/master/applications/ximage.desktop
    dest: /usr/share/applications/ximage.desktop
    mode: 0644
    force: yes
    timeout: 30
  register: task_result
  until: task_result | succeeded
  retries: 10
  delay: 5
  become: yes

# i3 Systemd Utilities
- name: Install i3 systemd packages
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ i3_systemd_shared | list }}"
  when: i3_systemd_shared | length

- name: Ensure xlock is downloaded
  get_url:
    url: https://raw.githubusercontent.com/cytopia/i3-utils-bin/master/bin/xlock
    dest: /usr/local/bin/xlock
    mode: 0755
    force: yes
    timeout: 30
  register: task_result
  until: task_result | succeeded
  retries: 10
  delay: 5
  become: yes

- name: Ensure systemd directories exist
  file:
    state: directory
    path: "{{ item }}"
    mode: 0755
  become: yes
  with_items:
    - "{{ i3_utils_systemd_systemd_base_path }}/system"
    - "{{ i3_utils_systemd_systemd_base_path }}/logind.conf.d"

- name: Ensure i3-utils-systemd close-lid is downloaded
  get_url:
    url: https://raw.githubusercontent.com/cytopia/i3-utils-systemd/master/systemd/logind.conf.d/70-close_lid.conf
    dest: "{{ i3_utils_systemd_systemd_base_path }}/logind.conf.d/70-close_lid.conf"
    mode: 0644
    force: yes
    timeout: 30
  register: task_result
  until: task_result | succeeded
  retries: 10
  delay: 5
  become: yes

# suspend.service requires the current user to be set
- name: Create temporary file
  tempfile:
    state: file
    suffix: temp
  changed_when: False
  check_mode: no
  register: i3_utils_systemd_tmp

- name: Ensure i3-utils-systemd suspend is downloaded
  get_url:
    url: https://github.com/cytopia/i3-utils-systemd/raw/master/systemd/system/suspend.service
    dest: "{{ i3_utils_systemd_tmp.path }}"
    mode: 0644
    force: yes
    timeout: 30
  register: task_result
  until: task_result | succeeded
  retries: 10
  delay: 5
  changed_when: False
  check_mode: no

- name: Set username
  command: whoami
  register: i3_utils_systemd_username
  check_mode: no
  changed_when: False

- name: Ensure i3-utils-systemd suspend is using correct username
  lineinfile:
    path: "{{ i3_utils_systemd_tmp.path }}"
    regexp: '^User=REPLACE_ME$'
    line: "User={{ i3_utils_systemd_username.stdout }}"
  changed_when: False
  check_mode: no

- name: Ensure i3-utils-systemd suspend is in place
  copy:
    src: "{{ i3_utils_systemd_tmp.path }}"
    dest: "{{ i3_utils_systemd_systemd_base_path }}/system/suspend.service"
    mode: 0644
  become: yes

- name: Ensure temp file is removed
  file:
    state: absent
    path: "{{ i3_utils_systemd_tmp.path }}"
  changed_when: False
  check_mode: no

# i3 Module Blocks
- name: Install i3 blocks modules packages
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ i3blocks_modules_shared_packages | list }}"
  when: i3blocks_modules_shared_packages | length

- name: Ensure ./local/share directory exists
  file:
    state: directory
    path: "{{ i3blocks_modules_path }}"
    mode: 0755
  check_mode: no

- name: Ensure i3blocks-modules is cloned
  git:
    repo: https://github.com/cytopia/i3blocks-modules
    clone: yes
    dest: "{{ i3blocks_modules_path }}"
    force: yes
    update: yes
    depth: 1
