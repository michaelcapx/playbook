---
# tasks file for ssh

# Install Dependencies
- name: Ensure SSH dependencies are installed
  become: yes
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: 3600
  with_items: "{{ ssh_dependencies | list }}"
  when: ssh_dependencies | length

# Generate SSH Keys
- name: Ensure SSH home directory exists
  become: yes
  file:
    path: "{{ ssh_home }}/.ssh"
    owner: "{{ ssh_user }}"
    group: "{{ ssh_user }}"
    state: directory
    mode: 0700

- name: Check that the user private ssh key exists
  stat:
    path: "{{ ssh_privkey }}"
  register: ssh_private_key_exists

- name: Generate SSH Key
  become: yes
  user:
    name: "{{ ssh_user }}"
    generate_ssh_key: "{{ ssh_generate_key | default(yes) }}"
    ssh_key_type: "{{ ssh_key_type | default('rsa') }}"
    ssh_key_bits: "{{ ssh_key_bits | default(4096) }}"
    ssh_key_file: "{{ ssh_key_file | default('.ssh/id_rsa') }}"
    ssh_key_comment: "{{ ssh_key_comment | default(inventory_hostname) }}"
  when: ssh_private_key_exists.stat.exists == false
  register: ssh_key_generated

- name: Ensure the keys have restricted permissions
  become: yes
  file:
    path: "{{ item }}"
    owner: "{{ ssh_user }}"
    group: "{{ ssh_user }}"
    mode: 0600
  with_items:
  - "{{ ssh_privkey }}"
  - "{{ ssh_pubkey }}"

- name: Add local SSH public key to admin account authorized_keys
  authorized_key:
    user: "{{ ssh_user }}"
    key: "{{ lookup('file', ssh_pubkey) }}"
    exclusive: no
    manage_dir: yes
  when: ssh_key_generated.changed

- name: Install SSH agent helper
  copy:
    src: start-agent
    dest: "{{ ssh_home }}/.ssh/start-agent"
    owner: "{{ ssh_user }}"
    group: "{{ ssh_user }}"
    mode: 0600
  when: ssh_key_generated.changed

- name: Start ssh-agent in the background
  shell: eval "$(ssh-agent -s)" && ssh-add {{ ssh_privkey }}
  become: true
  become_user: "{{ ssh_user }}"
  when: ssh_key_generated.changed
