---
# tasks file for node

- name: Ensure apt-transport-https is installed
  apt:
    name: apt-transport-https
    state: present

- name: Add Nodesource apt key
  apt_key:
    url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
    id: "68576280"
    state: present

- name: Add NodeSource repositories for Node.js
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items:
    - "deb https://deb.nodesource.com/node_{{ node_version }} {{ ansible_distribution_release }} main"
    - "deb-src https://deb.nodesource.com/node_{{ node_version }} {{ ansible_distribution_release }} main"
  register: node_repo

- name: Update apt cache if repo was added
  apt:
    update_cache: yes
  when: node_repo.changed

- name: Ensure Node.js and npm are installed
  apt: "name=nodejs={{ node_version|regex_replace('x', '') }}* state=present"

- name: Create npm global directory
  file:
    path: "{{ npm_config_prefix }}"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    state: directory

- name: Set npm global packages path
  command: npm config set prefix "{{ npm_config_prefix }}"
  changed_when: false

- name: Add npm_config_prefix bin directory to global $PATH
  lineinfile:
    path: "{{ ansible_env.HOME }}/.profile"
    line: "export {{ item.key }}={{ item.value }}"
    create: yes
  with_items:
    - { key: "PATH", value: "{{ npm_config_prefix }}/bin:$PATH" }

# - name: Source the profile
#   command: source "{{ ansible_env.HOME }}/.profile"
#   changed_when: false

- name: Add npm_config_prefix bin directory to global $PATH
  copy:
    dest: /etc/profile.d/npm.sh
    content: "export {{ item.key }}={{ item.value }}"
    mode: 0664
  with_items:
    - { key: "PATH", value: "{{ npm_config_prefix }}/bin:$PATH" }
    - { key: "NPM_CONFIG_PREFIX", value: "{{ npm_config_prefix }}" }
    - { key: "NODE_PATH", value: "$NODE_PATH:{{ npm_config_prefix }}/lib/node_modules" }

- name: Ensure npm global packages are installed
  npm:
    name: "{{ item.name | default(item) }}"
    version: "{{ item.version | default('latest') }}"
    global: yes
    state: latest
  environment:
    NPM_CONFIG_PREFIX: "{{ npm_config_prefix }}"
    NODE_PATH: "{{ npm_config_prefix }}/lib/node_modules"
    NPM_CONFIG_UNSAFE_PERM: "{{ npm_config_unsafe_perm }}"
  with_items: "{{ node_npm_global_packages }}"
