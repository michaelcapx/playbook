---
- name: Desktop Playbook
  hosts: localhost
  connection: local

  vars_files:
    - vars/config.yml

  pre_tasks:

    - name: Warn users if the server's Linux distribution is not GalliumOS 2.1
      pause:
        prompt: "GalliumOS is the only officially supported distribution; the setup will probably fail. Press Enter if you still want to continue."
      when: ansible_distribution != "GalliumOS" or ansible_distribution_version != "16.04" or ansible_lsb.description.split(' ')[0] != "GalliumOS"

    - name: Run configured pre-provision shell scripts
      script: "{{ item }}"
      with_items: "{{ mimetic_pre_provision_scripts | default([]) }}"
      when: mimetic_pre_provision_scripts | length

    - name: Include optional configuration files
      include_vars: "{{ item }}"
      with_fileglob:
        - "{{ playbook_dir }}/vault.yml"
        - "{{ playbook_dir }}/vars/vault.yml"
        - "{{ playbook_dir }}/vars/secrets.yml"
        - "{{ playbook_dir }}/secrets.yml"
        - "{{ playbook_dir }}/local.config.yml"

    - name: Upgrade packages
      become: yes
      apt:
        upgrade: safe
        update_cache: yes
        cache_valid_time: 300

  roles:

    # Base roles
    - { role: common, become: true, tags: ['base'] }
    - { role: admin,  become: true, tags: ['base'] }
    - { role: ssh,    become: true, tags: ['base'] }
    - { role: git,    become: true, tags: ['base'] }
    # - { role: shell,  become: true, tags: ['base'] }

    # Browser roles
    # - { role: chromium, become: true, tags: ['browser'] }
    # - { role: firefox,  become: true, tags: ['browser'] }

    # Editor roles
    - { role: sublime, become: true, tags: ['editor'] }

    # Desktop roles
    - { role: desktop, become: true, tags: ['desktop'] }
    # - { role: fonts,   become: true, tags: ['desktop'] }
    - { role: themes,  become: true, tags: ['desktop'] }
    - { role: xfce,    become: true, tags: ['desktop'] }

    # Virtualization roles
    # - { role: docker,     become: true, tags: ['virtualization'] }
    # - { role: vagrant,    become: true, tags: ['virtualization'] }

    # Server roles
    # - { role: apache, become: true, tags: ['server'] }

    # Language roles
    # - { role: python, become: true, tags: ['languages'] }
    # - { role: ruby,   become: true, tags: ['languages'] }
    # - { role: node,   become: true, tags: ['languages'] }
    # - { role: golang, become: true, tags: ['languages'] }
    # - { role: php,    become: true, tags: ['languages'] }

    # Database roles
    # - { role: mysql,      become: true, tags: ['database'] }
    # - { role: postgresql, become: true, tags: ['database'] }
    # - { role: mongodb,    become: true, tags: ['database'] }
    # - { role: couchdb,    become: true, tags: ['database'] }
    # - { role: sqlite,     become: true, tags: ['database'] }

    # Mail roles
    # - { role: postfix,     become: true, tags: ['mail'] }
    # - { role: mailhog,     become: true, tags: ['mail'] }
    # - { role: mailcatcher, become: true, tags: ['mail'] }

    # Utility roles
    # - { role: composer,   become: true, tags: ['utility'] }
    # - { role: beanstalkd, become: true, tags: ['utility'] }
    # - { role: memcached,  become: true, tags: ['utility'] }
    # - { role: redis,      become: true, tags: ['utility'] }
    # - { role: adminer,    become: true, tags: ['utility'] }
    # - { role: phpmyadmin, become: true, tags: ['utility'] }
    # - { role: pimpmylog,  become: true, tags: ['utility'] }
    # - { role: ngrok,      become: true, tags: ['utility'] }
    # - { role: blackfire,  become: true, tags: ['utility'] }

    # Extra roles
    # - { role: dotfiles, become: true, tags: ['extras'] }
    # - { role: projects, become: true, tags: ['extras'] }
    # - { role: www,      become: true, tags: ['extras'] }

  tasks:

    - name: Run configured post-provision shell scripts
      script: "{{ item }}"
      with_items: "{{ mimetic_post_provision_scripts | default([]) }}"
      when: mimetic_post_provision_scripts | length

    - name: Autoremove apt packages
      become: yes
      apt:
        autoremove: yes

    - name: Cleanup apt installation
      become: yes
      command: apt-get clean warn=no
